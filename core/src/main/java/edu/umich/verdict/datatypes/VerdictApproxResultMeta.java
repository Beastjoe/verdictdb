/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package edu.umich.verdict.datatypes;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Map;

import edu.umich.verdict.VerdictJDBCContext;

public class VerdictApproxResultMeta {

    VerdictJDBCContext vc;

    private Map<Integer, Integer> aggColumn2ErrorColumn;

    private Map<Alias, String> aliasToColumnLabel;

    private ResultSet rs;

    public VerdictApproxResultMeta(Map<Integer, Integer> aggColumn2ErrorColumn, Map<Alias, String> aliasToColumnLabel,
            ResultSet rs) {
        this.aggColumn2ErrorColumn = aggColumn2ErrorColumn;
        this.aliasToColumnLabel = aliasToColumnLabel;
        this.rs = rs;
    }

    public String getColumnLabel(int columnIndex) throws SQLException {
        ResultSetMetaData meta = rs.getMetaData();
        String aliasString = meta.getColumnLabel(columnIndex); // either autogenerated or explicitly specified
        String baseName = aliasString;

        for (Map.Entry<Alias, String> e : aliasToColumnLabel.entrySet()) {
            if (e.getKey().aliasName().equals(aliasString)) {
                if (e.getKey().autoGenerated()) {
                    baseName = e.getKey().originalName();
                } else {
                    baseName = e.getKey().aliasName();
                }
            }
        }

        return baseName;
    }

}
