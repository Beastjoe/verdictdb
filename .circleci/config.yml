# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-jdk7:
    docker:
      # specify the version you desire here
      - image: maven:3.5.4-jdk-7-slim

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: mariadb:10
        environment:
          MYSQL_DATABASE: test
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      - image: postgres:10
        environment:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
      - image: codingtony/impala

    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - run: apt-get update; apt-get install -y git
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: mvn install:install-file -Dfile=src/test/resources/jars/ImpalaJDBC41-2.6.3.jar -DgroupId=com.cloudera -DartifactId=impala-jdbc41 -Dversion=2.6.3 -Dpackaging=jar
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      # run tests!
      - run: git clone git@github.com:verdictdb/verdictdb-private-resources.git
      - run: mvn -B clean test 2> /dev/null

  build-jdk8:
    machine: true
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      # - run: sudo apt-get update; sudo apt-get install -y git
      - checkout
      - run: docker run --rm -d --name verdictdb-mysql -p 127.0.0.1:3306:3306 -e MYSQL_DATABASE=test -e MYSQL_ALLOW_EMPTY_PASSWORD=yes mariadb:10
      - run: docker run --rm -d --name verdictdb-postgres -p 127.0.0.1:5432:5432 -e POSTGRES_DB=test -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD="" postgres:10
      - run: docker run --rm -d --name verdictdb-impala -p 127.0.0.1:21050:21050 codingtony/impala
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: mvn install:install-file -Dfile=src/test/resources/jars/ImpalaJDBC41-2.6.3.jar -DgroupId=com.cloudera -DartifactId=impala-jdbc41 -Dversion=2.6.3 -Dpackaging=jar
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: git clone git@github.com:verdictdb/verdictdb-private-resources.git
      - run: docker run --rm --link verdictdb-impala:impala-server -v "$(cd "$(dirname "src/test/resources")"; pwd)/$(basename "src/test/resources")":/work:ro codingtony/impala hdp impala-server hadoop fs -put /work/tpch_test_data /tmp/tpch_test_data
      - run: mvn -B test 2> /dev/null
      - run: mvn cobertura:cobertura
      - run: bash <(curl -s https://codecov.io/bash) -t 9cf48c61-07ed-4a14-9eed-f7129664ee79

    # docker:
    #   # specify the version you desire here
    #   - image: maven:3.5.4-jdk-8-slim
    #
    #   # Specify service dependencies here if necessary
    #   # CircleCI maintains a library of pre-built images
    #   # documented at https://circleci.com/docs/2.0/circleci-images/
    #   - image: mysql:5.5
    #     environment:
    #       MYSQL_DATABASE: test
    #       MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    #   - image: postgres:10
    #     environment:
    #       POSTGRES_DB: test
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: ""
    #   - image: codingtony/impala

    # working_directory: ~/repo
    # steps:
    #   - run: apt-get update; apt-get install -y git
    #   - checkout
    #   # Download and cache dependencies
    #   - restore_cache:
    #       keys:
    #       - v1-dependencies-{{ checksum "pom.xml" }}
    #       # fallback to using the latest cache if no exact match is found
    #       - v1-dependencies-
    #   - run: mvn install:install-file -Dfile=src/test/resources/jars/ImpalaJDBC41-2.6.3.jar -DgroupId=com.cloudera -DartifactId=impala-jdbc41 -Dversion=2.6.3 -Dpackaging=jar
    #   - run: mvn dependency:go-offline
    #   - save_cache:
    #       paths:
    #         - ~/.m2
    #       key: v1-dependencies-{{ checksum "pom.xml" }}
    #   # run tests!
    #   - run: git clone git@github.com:verdictdb/verdictdb-private-resources.git
    #   - run: docker run --rm --link verdictdb-impala:impala-server -v "$(cd "$(dirname "src/test/resources")"; pwd)/$(basename "src/test/resources")":/work:ro codingtony/impala hdp impala-server hadoop fs -put /work/tpch_test_data /tmp/tpch_test_data
    #   - run: mvn -B clean test 2> /dev/null
    #   - run: mvn cobertura:cobertura
    #   - run: bash <(curl -s https://codecov.io/bash) -t 9cf48c61-07ed-4a14-9eed-f7129664ee79

  build-spark:
      docker:
        # specify the version you desire here
        - image: maven:3.5.4-jdk-8-slim

      working_directory: ~/repo
      environment:
        # Customize the JVM maximum heap limit
        MAVEN_OPTS: -Xmx3200m
      steps:
        - run: apt-get update; apt-get install -y git
        - checkout
        # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
        - run: mvn install:install-file -Dfile=src/test/resources/jars/ImpalaJDBC41-2.6.3.jar -DgroupId=com.cloudera -DartifactId=impala-jdbc41 -Dversion=2.6.3 -Dpackaging=jar
        - run: mvn dependency:go-offline
        - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "pom.xml" }}
        # run tests!
        - run: git clone git@github.com:verdictdb/verdictdb-private-resources.git
        - run: mvn test -Dtest=SparkTpchSelectQueryCoordinatorTest 2> /dev/null

workflows:
  version: 2
  build_and_test:
    jobs:
      # - build-spark
      # - build-jdk7
      - build-jdk8